!include style.puml

!startsub component
'!include <material/grid> '( or vector_line, or vector_polyline)

component "Scanning Subsystem" as scanning_subsystem {

  'Contains the H/W components (not considering the controller logic)'
  package " " <<layout>> as scan_hw {
    component Sample as ss_sample
    component Piezo as ss_piezo
    component LVDT as ss_lvdt
    interface "<latex>\langle S_x, S_y \rangle</latex>" <<input>> as ss_piezo_in
    interface "<latex>\langle R_x, R_y \rangle</latex>" <<output>> as ss_lvdt_out

    ss_piezo -u-> ss_sample
    ss_piezo -d-> ss_lvdt
    ss_lvdt -> ss_lvdt_out
    ss_piezo_in -> ss_piezo
  }

  'Contains the controller logic'
  package " " <<layout>> as spc_pkg {
    interface "<latex>\langle R_x, R_y \rangle</latex>" <<input>> as spc_in
    interface "<latex>\langle S_x, S_y \rangle</latex>" <<output>> as spc_out
    'Consider adding <$ma_vector_polyline,color=dimgray>" <<center>> for sprite
    component "Scan Pattern\nController\n" <<center>> as scan_pattern_controller

    spc_in -> scan_pattern_controller
    scan_pattern_controller -> spc_out
  }

  spc_out ..> ss_piezo_in
  ss_lvdt_out ..> spc_in

  'Force positioning magic'
  spc_pkg -[hidden]right- scan_hw
}
!endsub
